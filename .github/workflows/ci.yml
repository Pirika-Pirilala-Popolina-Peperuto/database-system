on: [push, pull_request]
name: Test
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Run linters
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          version: v1.43.0

  test:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/cache@v2.1.7
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test
        run: go test ./...

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-go@v2
        with:
          go-version: "1.17"
      - name: Install protobuf
        run: sudo apt-get install -y protobuf-compiler
      - name: Install protoc-gen
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest&&go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest&&go install entgo.io/contrib/entproto/cmd/protoc-gen-entgrpc@latest
      - uses: actions/cache@v2.1.7
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run go generate
        run: go generate ./...
      - name: Check generated files
        run: |
          status=$(git status --porcelain)
          if [ -n "$status" ]; then
            echo "you need to run 'go generate ./...' and commit the changes"
            echo "$status"
            exit 1
          fi
