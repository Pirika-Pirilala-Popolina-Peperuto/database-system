// Code generated by entc, DO NOT EDIT.

package discount

import (
	"fmt"
)

const (
	// Label holds the string label denoting the discount type in the database.
	Label = "discount"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPeriodStart holds the string denoting the period_start field in the database.
	FieldPeriodStart = "period_start"
	// FieldPeriodEnd holds the string denoting the period_end field in the database.
	FieldPeriodEnd = "period_end"
	// FieldMethod holds the string denoting the method field in the database.
	FieldMethod = "method"
	// FieldDiscountPrice holds the string denoting the discount_price field in the database.
	FieldDiscountPrice = "discount_price"
	// FieldDiscountPercentage holds the string denoting the discount_percentage field in the database.
	FieldDiscountPercentage = "discount_percentage"
	// EdgeOrders holds the string denoting the orders edge name in mutations.
	EdgeOrders = "orders"
	// Table holds the table name of the discount in the database.
	Table = "discounts"
	// OrdersTable is the table that holds the orders relation/edge. The primary key declared below.
	OrdersTable = "order_discounts"
	// OrdersInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrdersInverseTable = "orders"
)

// Columns holds all SQL columns for discount fields.
var Columns = []string{
	FieldID,
	FieldPeriodStart,
	FieldPeriodEnd,
	FieldMethod,
	FieldDiscountPrice,
	FieldDiscountPercentage,
}

var (
	// OrdersPrimaryKey and OrdersColumn2 are the table columns denoting the
	// primary key for the orders relation (M2M).
	OrdersPrimaryKey = []string{"order_id", "discount_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Method defines the type for the "method" enum field.
type Method string

// Method values.
const (
	MethodPERCENTAGE Method = "PERCENTAGE"
	MethodPRICE      Method = "PRICE"
)

func (m Method) String() string {
	return string(m)
}

// MethodValidator is a validator for the "method" field enum values. It is called by the builders before save.
func MethodValidator(m Method) error {
	switch m {
	case MethodPERCENTAGE, MethodPRICE:
		return nil
	default:
		return fmt.Errorf("discount: invalid enum value for method field: %q", m)
	}
}
