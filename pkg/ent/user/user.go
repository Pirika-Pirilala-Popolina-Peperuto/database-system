// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPassword holds the string denoting the password field in the database.
	FieldPassword = "password"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// EdgeOrders holds the string denoting the orders edge name in mutations.
	EdgeOrders = "orders"
	// EdgeShoppingCartProducts holds the string denoting the shopping_cart_products edge name in mutations.
	EdgeShoppingCartProducts = "shopping_cart_products"
	// Table holds the table name of the user in the database.
	Table = "users"
	// OrdersTable is the table that holds the orders relation/edge.
	OrdersTable = "orders"
	// OrdersInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrdersInverseTable = "orders"
	// OrdersColumn is the table column denoting the orders relation/edge.
	OrdersColumn = "customer_id"
	// ShoppingCartProductsTable is the table that holds the shopping_cart_products relation/edge. The primary key declared below.
	ShoppingCartProductsTable = "shopping_cart"
	// ShoppingCartProductsInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	ShoppingCartProductsInverseTable = "products"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldPassword,
	FieldEmail,
	FieldAddress,
}

var (
	// ShoppingCartProductsPrimaryKey and ShoppingCartProductsColumn2 are the table columns denoting the
	// primary key for the shopping_cart_products relation (M2M).
	ShoppingCartProductsPrimaryKey = []string{"user_id", "product_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
