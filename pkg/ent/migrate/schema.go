// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: "gen_random_uuid()"},
		{Name: "name", Type: field.TypeString},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// DiscountsColumns holds the columns for the "discounts" table.
	DiscountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: "gen_random_uuid()"},
		{Name: "period_start", Type: field.TypeTime, Nullable: true},
		{Name: "period_end", Type: field.TypeTime, Nullable: true},
		{Name: "method", Type: field.TypeEnum, Enums: []string{"PERCENTAGE", "PRICE"}},
		{Name: "discount_price", Type: field.TypeInt},
		{Name: "discount_percentage", Type: field.TypeFloat64},
	}
	// DiscountsTable holds the schema information for the "discounts" table.
	DiscountsTable = &schema.Table{
		Name:       "discounts",
		Columns:    DiscountsColumns,
		PrimaryKey: []*schema.Column{DiscountsColumns[0]},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: "gen_random_uuid()"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "process_status", Type: field.TypeEnum, Enums: []string{"UNPAID", "PROCESSING", "COMPLETE"}},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "customer_id", Type: field.TypeUUID, Nullable: true},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_users_orders",
				Columns:    []*schema.Column{OrdersColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PicturesColumns holds the columns for the "pictures" table.
	PicturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: "gen_random_uuid()"},
		{Name: "picture_url", Type: field.TypeString},
	}
	// PicturesTable holds the schema information for the "pictures" table.
	PicturesTable = &schema.Table{
		Name:       "pictures",
		Columns:    PicturesColumns,
		PrimaryKey: []*schema.Column{PicturesColumns[0]},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: "gen_random_uuid()"},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "price", Type: field.TypeFloat64, SchemaType: map[string]string{"postgres": "decimal(12,2)"}},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "picture_id", Type: field.TypeUUID, Unique: true, Nullable: true},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "products_pictures_product",
				Columns:    []*schema.Column{ProductsColumns[5]},
				RefColumns: []*schema.Column{PicturesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Default: "gen_random_uuid()"},
		{Name: "name", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// OrderProductsColumns holds the columns for the "order_products" table.
	OrderProductsColumns = []*schema.Column{
		{Name: "order_id", Type: field.TypeUUID},
		{Name: "product_id", Type: field.TypeUUID},
	}
	// OrderProductsTable holds the schema information for the "order_products" table.
	OrderProductsTable = &schema.Table{
		Name:       "order_products",
		Columns:    OrderProductsColumns,
		PrimaryKey: []*schema.Column{OrderProductsColumns[0], OrderProductsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_products_order_id",
				Columns:    []*schema.Column{OrderProductsColumns[0]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "order_products_product_id",
				Columns:    []*schema.Column{OrderProductsColumns[1]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// OrderDiscountsColumns holds the columns for the "order_discounts" table.
	OrderDiscountsColumns = []*schema.Column{
		{Name: "order_id", Type: field.TypeUUID},
		{Name: "discount_id", Type: field.TypeUUID},
	}
	// OrderDiscountsTable holds the schema information for the "order_discounts" table.
	OrderDiscountsTable = &schema.Table{
		Name:       "order_discounts",
		Columns:    OrderDiscountsColumns,
		PrimaryKey: []*schema.Column{OrderDiscountsColumns[0], OrderDiscountsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_discounts_order_id",
				Columns:    []*schema.Column{OrderDiscountsColumns[0]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "order_discounts_discount_id",
				Columns:    []*schema.Column{OrderDiscountsColumns[1]},
				RefColumns: []*schema.Column{DiscountsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductCategoriesColumns holds the columns for the "product_categories" table.
	ProductCategoriesColumns = []*schema.Column{
		{Name: "product_id", Type: field.TypeUUID},
		{Name: "category_id", Type: field.TypeUUID},
	}
	// ProductCategoriesTable holds the schema information for the "product_categories" table.
	ProductCategoriesTable = &schema.Table{
		Name:       "product_categories",
		Columns:    ProductCategoriesColumns,
		PrimaryKey: []*schema.Column{ProductCategoriesColumns[0], ProductCategoriesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_categories_product_id",
				Columns:    []*schema.Column{ProductCategoriesColumns[0]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_categories_category_id",
				Columns:    []*schema.Column{ProductCategoriesColumns[1]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ShoppingCartColumns holds the columns for the "shopping_cart" table.
	ShoppingCartColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "product_id", Type: field.TypeUUID},
	}
	// ShoppingCartTable holds the schema information for the "shopping_cart" table.
	ShoppingCartTable = &schema.Table{
		Name:       "shopping_cart",
		Columns:    ShoppingCartColumns,
		PrimaryKey: []*schema.Column{ShoppingCartColumns[0], ShoppingCartColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shopping_cart_user_id",
				Columns:    []*schema.Column{ShoppingCartColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "shopping_cart_product_id",
				Columns:    []*schema.Column{ShoppingCartColumns[1]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CategoriesTable,
		DiscountsTable,
		OrdersTable,
		PicturesTable,
		ProductsTable,
		UsersTable,
		OrderProductsTable,
		OrderDiscountsTable,
		ProductCategoriesTable,
		ShoppingCartTable,
	}
)

func init() {
	OrdersTable.ForeignKeys[0].RefTable = UsersTable
	ProductsTable.ForeignKeys[0].RefTable = PicturesTable
	OrderProductsTable.ForeignKeys[0].RefTable = OrdersTable
	OrderProductsTable.ForeignKeys[1].RefTable = ProductsTable
	OrderDiscountsTable.ForeignKeys[0].RefTable = OrdersTable
	OrderDiscountsTable.ForeignKeys[1].RefTable = DiscountsTable
	ProductCategoriesTable.ForeignKeys[0].RefTable = ProductsTable
	ProductCategoriesTable.ForeignKeys[1].RefTable = CategoriesTable
	ShoppingCartTable.ForeignKeys[0].RefTable = UsersTable
	ShoppingCartTable.ForeignKeys[1].RefTable = ProductsTable
}
